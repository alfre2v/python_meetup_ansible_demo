---
# group vars defined here apply to all hosts in the inventory

postgresql_version: '12'
# admin username for postgresql is `postgres`
postgres_admin_user: postgres
postgres_admin_pass: ""  # overridden in var_secrets.yml or vars_vault.yml

# linux system user for postgres process is `postgres` too
postgres_user: "{{ postgres_admin_user }}"
#postgres_pass: ""  # overridden by var_secrets.yml


app_database_host: "{{ hostvars[groups['db'][0]].ansible_host }}"  # to be substituted in local_settings_vagrant_template.py
app_database_port: 5432

app_database_name: "tutor_site_demo"
app_database_user: "{{ app_database_name }}"
app_database_pass: ""  # overridden by var_secrets.yml


# --- Postgresql configuration lines ---

# lines to substitute in file /etc/postgresql/{{ postgresql_version }}/main/postgresql.conf
postgresql_conf_lines:
  - { regexp: '^\s*listen_addresses\s*=', line: 'listen_addresses = ''0.0.0.0''  # ALF: Listen on all IPv4 addresses', insertbefore: '^port\s*=' }

# lines to include in file /etc/postgresql/*/main/pg_hba.conf
# see: https://www.postgresql.org/docs/current/auth-pg-hba-conf.html
pg_hba_conf_lines:
  - { type: local, database: all, user: postgres, address: 'samehost', auth_method: peer }
  - { type: local, database: all, user: all, address: 'samehost', auth_method: peer }
  - { type: host, database: all, user: all, address: '127.0.0.1/32', auth_method: md5 }
  - { type: host, database: all, user: all, address: '::1/128', auth_method: md5 }
  # for vagrant allow ssl connections from the same network (samenet == 192.168.56.1/24)
  - { type: hostssl, database: all, user: all, address: 'samenet', auth_method: md5 }


# --- Import DB data dump ---

should_import_data_dump: no

# app DB data import
sql_dump_filename: tutorsitedemo_dumpfile.sql
local_data_dump_dir: "files"                                                      # relative path from playbook location
remote_data_dump_dir: /home/{{ postgres_user }}/data_dumps                        # do not add / in the end
local_sql_dump_file_path: "{{ local_data_dump_dir }}/{{ sql_dump_filename }}"
remote_sql_dump_file_path: "{{ remote_data_dump_dir }}/{{ sql_dump_filename }}"







# apt packages that must be installed in all machines
apt_install_packages:
  # that lack of the 'acl' package on Ubuntu 20.04 breaks ansible's become_user su plugin.
  # The /var/tmp/ansible-tmp-* stuff lacks the extra ACLS that allow the become_user to read the tmp python files and it break with a permissions error.
  # see: https://www.reddit.com/r/Ubuntu/comments/ge77fa/acl_no_longer_included_by_default_in_ubuntu/
  - acl
  - curl
  - wget
  - postgresql-client-{{ postgresql_version }}





